<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="notifyIcon1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="contextMenuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>191, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>